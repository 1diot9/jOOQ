/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.kotlin.db.h2.tables.records


import java.time.LocalDate

import org.jooq.Record1
import org.jooq.example.kotlin.db.h2.tables.Author
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AuthorRecord() : UpdatableRecordImpl<AuthorRecord>(Author.AUTHOR) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var dateOfBirth: LocalDate?
        set(value): Unit = set(3, value)
        get(): LocalDate? = get(3) as LocalDate?

    open var yearOfBirth: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var address: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised AuthorRecord
     */
    constructor(id: Int? = null, firstName: String? = null, lastName: String? = null, dateOfBirth: LocalDate? = null, yearOfBirth: Int? = null, address: String? = null): this() {
        this.id = id
        this.firstName = firstName
        this.lastName = lastName
        this.dateOfBirth = dateOfBirth
        this.yearOfBirth = yearOfBirth
        this.address = address
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised AuthorRecord
     */
    constructor(value: org.jooq.example.kotlin.db.h2.tables.pojos.Author?): this() {
        if (value != null) {
            this.id = value.id
            this.firstName = value.firstName
            this.lastName = value.lastName
            this.dateOfBirth = value.dateOfBirth
            this.yearOfBirth = value.yearOfBirth
            this.address = value.address
            resetChangedOnNotNull()
        }
    }
}
