/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.duckdb.system.information_schema;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.jooq.meta.duckdb.system.System;
import org.jooq.meta.duckdb.system.information_schema.tables.Columns;
import org.jooq.meta.duckdb.system.information_schema.tables.Schemata;
import org.jooq.meta.duckdb.system.information_schema.tables.Tables;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InformationSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>system.information_schema</code>
     */
    public static final InformationSchema INFORMATION_SCHEMA = new InformationSchema();

    /**
     * The table <code>system.information_schema.columns</code>.
     */
    public final Columns COLUMNS = Columns.COLUMNS;

    /**
     * The table <code>system.information_schema.schemata</code>.
     */
    public final Schemata SCHEMATA = Schemata.SCHEMATA;

    /**
     * The table <code>system.information_schema.tables</code>.
     */
    public final Tables TABLES = Tables.TABLES;

    /**
     * No further instances allowed
     */
    private InformationSchema() {
        super("information_schema", null);
    }


    @Override
    public Catalog getCatalog() {
        return System.SYSTEM;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Columns.COLUMNS,
            Schemata.SCHEMATA,
            Tables.TABLES
        );
    }
}
